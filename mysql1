#!/bin/bash
# MUST TUNE VAR
IPMYSQLSERVER1="192.168.56.147" # ip address mysqserver 1
IPMYSQLSERVER2="192.168.56.146" # ip address mysqserver 2
VIPPUBLICMYSQL="192.168.56.150/24" # public vip keepalived mysql service
DEVINTERFACE="enp0s8" # net device interface
# DEFINE VAR
MYSQLDBUSER="replication" # db user replication 
MYSQLDBUSERPASS="SuperPwd!!!" # db user replication password 
userremotenamebd="admin" # DB user for remote manage (connecting web-server)
userremotepassbd="123456" # pass Remote DBuser
userwpdbsql="userwp" # user BD WP
userpwdwpdbsql="123456" # PAssword for BD WP
# set hostname for server
hostnamectl set-hostname mysqlkeepalived1
# install packages
apt update
apt install keepalived -y
apt install --no-install-recommends mysql-server -y # apt install mariadb-server -y
# starting & enabling server
systemctl start mysql # or systemctl start mariadb
systemctl enable mysql # or systemctl enable mariadb

# create user replacation and set pass
mysql -u root -e "CREATE USER '$MYSQLDBUSER'@'%' IDENTIFIED WITH mysql_native_password BY '$MYSQLDBUSERPASS'"
mysql -u root -e "GRANT REPLICATION SLAVE ON *.* TO '$MYSQLDBUSER'@'%'"
mysql -u root -e "FLUSH PRIVILEGES" # if use password then next: mysql -u root -p"$DATABASE_PASS" -e "FLUSH PRIVILEGES"
# create user bd for remote manage (for create db wp)
mysql -u root -e "CREATE USER '$userremotenamebd'@'%' IDENTIFIED WITH mysql_native_password BY '$userremotepassbd';"
mysql -u root -e "GRANT ALL PRIVILEGES ON *.* TO '$userremotenamebd'@'%'"
mysql -u root -e "FLUSH PRIVILEGES;"
# create DB, user, pass for CMS WP 
mysql -u$userremotenamebd -$userremotepassbd <<EOF
CREATE DATABASE cms;
CREATE USER '$userwpdbsql'@'%' mysql_native_password BY '$userpwdwpdbsql';
GRANT ALL PRIVILEGES ON cms.* TO '$userwpdbsql'@'%';
FLUSH PRIVILEGES;
EOF
# configure mysqld.cnf at need parametrs on replication
sed -i '/^# port/s/^# *port */port/' /etc/mysql/mysql.conf.d/mysqld.cnf
sed -i '/^bind-address/s/= *127\.0\.0\.1/= 0.0.0.0/' /etc/mysql/mysql.conf.d/mysqld.cnf
sed -i '/^# server-id/{s/^# *//; s/1$/1/}' /etc/mysql/mysql.conf.d/mysqld.cnf
sed -i '/^# log_bin/s/^# //' /etc/mysql/mysql.conf.d/mysqld.cnf
systemctl restart mysql
# activation replecation on mysql server
MASTLOGFILE=$(mysql -u root -Bse "SHOW MASTER STATUS;" | awk '{print $1}')
FILEPOS=$(mysql -u root -Bse "SHOW MASTER STATUS;" | awk '{print $2}')

echo $MASTLOGFILE >> test.txt
echo $FILEPOS >> test.txt

mysql -u root -e "STOP REPLICA"
mysql -u root -e "CHANGE MASTER TO MASTER_HOST = '$IPMYSQLSERVER2', master_port=3306, MASTER_USER = '$MYSQLDBUSER', MASTER_PASSWORD = '$MYSQLDBUSERPASS', MASTER_LOG_FILE = '$MASTLOGFILE', MASTER_LOG_POS = $FILEPOS"
mysql -u root -e "START REPLICA"

systemctl restart mysql

# configure keepalived.conf on MASTER
bash -c "cat <<EOIPFW >> /etc/keepalived/keepalived.conf
# primary mysql server
global_defs {
        router_id msql-01
}
# Health checks
vrrp_script chk_mysql {
        script "/etc/keepalived/checkactive.sh"
#       weight 2     # Is relevant for the diff in priority
        interval 1   # every ... seconds
        timeout 3    # script considered failed after ... seconds
        fall 3       # number of failures for K.O.
        rise 1       # number of success for OK
        }
vrrp_instance VI-MM-VIP1 {
        state MASTER
        interface $DEVINTERFACE
        virtual_router_id 123
        priority 100
        advert_int 1
        authentication {
                auth_type PASS
                auth_pass pwd123
        }
        virtual_ipaddress {
                $VIPPUBLICMYSQL dev $DEVINTERFACE # public interface for VIP
        }
track_script {
    chk_mysql
  }

}
EOIPFW"

# create  bash script checkactive.sh for keepalived mysql check
cat <<EOF > /etc/keepalived/checkactive.sh
#!/bin/bash
# Название службы MySQL, обычно это mysql или mysqld
# Проверка статуса службы
 
if [ \$(systemctl is-active mysql) == "inactive" ];
then
# Возвращаем код выхода 1, если служба неактивна
exit 1
else
# Возвращаем код выхода 0 (нет ошибки), если служба активна
echo 0
fi
EOF
chmod +x /etc/keepalived/checkactive.sh
# create keepalived user for script
useradd -s /usr/sbin/nologin keepalived_script 
echo 'net.ipv4.ip_nonlocal_bind=1' | sudo tee --append /etc/sysctl.conf > /dev/null
sysctl -p
systemctl start keepalived
# install node exporter
apt install prometheus-node-exporter -y
systemctl start prometheus-node-exporter
systemctl enable prometheus-node-exporter
